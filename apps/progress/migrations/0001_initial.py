# Generated by Django 4.2.11 on 2025-09-02 19:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('trainers', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProgressGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('goal_type', models.CharField(choices=[('weight', 'Weight Goal'), ('measurement', 'Body Measurement'), ('performance', 'Performance Goal'), ('habit', 'Habit Formation'), ('health', 'Health Metric')], max_length=20)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('unit', models.CharField(blank=True, help_text='kg, cm, reps, etc.', max_length=20)),
                ('target_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('achieved', 'Achieved'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='clients.clientprofile')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_goals', to='trainers.trainerprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('current_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('workout_completed', models.BooleanField(default=False)),
                ('meal_plan_followed', models.BooleanField(default=False)),
                ('energy_level', models.PositiveIntegerField(blank=True, choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Moderate'), (4, 'High'), (5, 'Very High')], null=True)),
                ('sleep_hours', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('stress_level', models.PositiveIntegerField(blank=True, choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Moderate'), (4, 'High'), (5, 'Very High')], null=True)),
                ('chest_measurement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('waist_measurement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hip_measurement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('arm_measurement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('thigh_measurement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True, help_text='How did you feel today?')),
                ('trainer_feedback', models.TextField(blank=True, help_text="Trainer's feedback on this entry")),
                ('progress_photo', models.ImageField(blank=True, null=True, upload_to='progress_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to='clients.clientprofile')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('client', 'date')},
            },
        ),
    ]
