# Generated by Django 4.2.11 on 2025-09-02 19:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('trainers', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='EthiopianFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_amharic', models.CharField(blank=True, max_length=200)),
                ('category', models.CharField(choices=[('grains', 'Grains & Cereals'), ('legumes', 'Legumes'), ('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('meat', 'Meat & Poultry'), ('dairy', 'Dairy'), ('spices', 'Spices & Herbs'), ('beverages', 'Beverages'), ('traditional_dishes', 'Traditional Dishes')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('calories_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fat_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fiber_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('seasonal_availability', models.CharField(blank=True, max_length=200)),
                ('cultural_significance', models.TextField(blank=True)),
                ('preparation_notes', models.TextField(blank=True)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_gluten_free', models.BooleanField(default=False)),
                ('is_fasting_friendly', models.BooleanField(default=False, help_text='Orthodox fasting compatible')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('meal_type', models.CharField(choices=[('weight_loss', 'Weight Loss'), ('muscle_gain', 'Muscle Gain'), ('maintenance', 'Maintenance'), ('performance', 'Performance'), ('therapeutic', 'Therapeutic')], default='maintenance', max_length=20)),
                ('daily_calories', models.PositiveIntegerField(blank=True, null=True)),
                ('protein_grams', models.PositiveIntegerField(blank=True, null=True)),
                ('carbs_grams', models.PositiveIntegerField(blank=True, null=True)),
                ('fat_grams', models.PositiveIntegerField(blank=True, null=True)),
                ('meal_structure', models.JSONField(default=dict, help_text='Daily meal structure')),
                ('includes_traditional_foods', models.BooleanField(default=True)),
                ('fasting_considerations', models.TextField(blank=True, help_text='Orthodox fasting considerations')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('ai_enhanced', models.BooleanField(default=False)),
                ('ai_suggestions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='clients.clientprofile')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='trainers.trainerprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
